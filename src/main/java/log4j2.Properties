name=PropertiesConfig
property.filename = logs
appenders = console, file

#Affichage sur la console
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

#Affichage dans le fichier log
appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName=${filename}/MyLogs.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
appender.file.append = true  #Le vrai bloque le log? c'est l'inverse
Log4j.appender.file.Append = true

loggers=file
logger.file.name=onBoarding
logger.file.level = trace
logger.file.appenderRefs = file
logger.file.appenderRef.file.ref = LOGFILE

rootLogger.level = trace
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT


#quelle est la différence entre rootLogger et loggers?
#La différence est : le bloc logger est spécifique à un package, si non la config de base avec root sera
#appliquée pour les autre config 

#rollingfile => ?
#Quand afficher dans console ou dans le fichier => regarde le appenderRef?
#Mets la date du jour dans le titre et l'heure dans le contenue du fichier

